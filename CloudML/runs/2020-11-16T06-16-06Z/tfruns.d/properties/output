
> library(tensorflow)

> library(keras)

> FLAGS <- flags(
+   flag_numeric("dropout1", 0.4),
+   flag_numeric("dropout2", 0.3)
+ )

> chest_list <- c("NORMAL","PNEUMONIA")

> output_n<-length(chest_list)

> img_width <- 20

> img_height <- 20

> target_size <- c(img_width, img_height)

> # RGB = 3 channels
> channels <- 3

> batch_size<-10

> # path to image folders
> train_image_files_path<- file.path("/Users/grahamchickering/Downloads/chest_xray/val")

> train_data_gen = image_data_generator(
+   rescale = 1/255,
+   validation_split=0.2
+ )

> train_image_array_gen <- flow_images_from_directory(train_image_files_path, 
+                                                     train_data_gen,
+ .... [TRUNCATED] 

> val_image_array_gen <- flow_images_from_directory(train_image_files_path, 
+                                                   train_data_gen,
+     .... [TRUNCATED] 

> train_samples <- train_image_array_gen$n

> # number of validation samples
> valid_samples <- val_image_array_gen$n

> # define batch size and number of epochs
> batch_size <- 10

> epochs <- 2

> model <- keras_model_sequential()

> # add layers
> model %>%
+   layer_conv_2d(filter = 32, kernel_size = c(3,3), padding = "same", input_shape = c(img_width, img_height, channels)) %> .... [TRUNCATED] 

> model %>% compile(
+   optimizer = "adam",
+   loss = "sparse_categorical_crossentropy",
+   metrics = "accuracy"
+ )

> hist <- model %>% fit_generator(
+   # training data
+   train_image_array_gen,
+   
+   # epochs
+   steps_per_epoch = as.integer(train_samples / b .... [TRUNCATED] 
